services:
  auth:
    image: authelia/authelia:latest
    volumes:
      - ./auth/config:/config
    networks:
      - example-network
    environment:
      - TZ=UTC
    restart: unless-stopped
    expose:
      - 9091
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth.rule=Host(`auth.example.com`)"
      - "traefik.http.routers.auth.entrypoints=web"
      - "traefik.http.services.auth.loadbalancer.server.port=9091"

  book-library:
    image: linuxserver/calibre-web:latest
    volumes:
      - ./book-library/config:/config
      - /path/to/books:/books
    environment:
      - TZ=UTC
    restart: unless-stopped
    expose:
      - 8083
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.book-library.rule=Host(`books.example.com`)"
      - "traefik.http.routers.book-library.entrypoints=web"
      - "traefik.http.services.book-library.loadbalancer.server.port=8083"

  media-server:
    image: jellyfin/jellyfin:latest
    volumes:
      - ./media-server/config:/config
      - ./media-server/cache:/cache
      - /path/to/movies:/media/movies:ro
      - /path/to/shows:/media/shows:ro
      - /path/to/music:/media/music:ro
    environment:
      - TZ=UTC
      - JELLYFIN_PublishedServerUrl=https://media.example.com
    restart: unless-stopped
    network_mode: host

  container-manager:
    image: portainer/portainer-ce:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - container_data:/data
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.container-manager.rule=Host(`manager.example.com`)"
      - "traefik.http.routers.container-manager.entrypoints=web"
      - "traefik.http.services.container-manager.loadbalancer.server.port=9000"
    restart: unless-stopped

  custom-site:
    build:
      context: .
    volumes:
      - ./custom-site/config.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    expose:
      - 80
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.custom-site.rule=Host(`site.example.com`)"
      - "traefik.http.routers.custom-site.entrypoints=web"
      - "traefik.http.services.custom-site.loadbalancer.server.port=80"

  rss-feed:
    build: ./app
    volumes:
      - ./rss-feed/cache:/app/cache
      - ./rss-feed/config.json:/app/config.json:ro
    environment:
      - INTERVAL_HOURS=6
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rss-feed.rule=Host(`rss.example.com`)"
      - "traefik.http.routers.rss-feed.entrypoints=web"
      - "traefik.http.services.rss-feed.loadbalancer.server.port=5000"
    restart: unless-stopped

  router:
    image: traefik:v3.0
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./router/config.yml:/etc/traefik/traefik.yml:ro
    networks:
      - example-network
    command:
      - --providers.docker=true
      - --providers.docker.network=example-network
      - --entrypoints.web.address=:80
    restart: unless-stopped

  news-aggregator:
    image: linuxserver/freshrss:latest
    volumes:
      - ./news-aggregator/config:/config
    environment:
      - TZ=UTC
    restart: unless-stopped
    expose:
      - 80
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.news-aggregator.rule=Host(`news.example.com`)"
      - "traefik.http.routers.news-aggregator.entrypoints=web"
      - "traefik.http.services.news-aggregator.loadbalancer.server.port=80"

  static-site:
    image: nginx:alpine
    volumes:
      - ./static-site/html:/usr/share/nginx/html:ro
      - ./static-site/config.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    expose:
      - 80
    networks:
      - example-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static-site.rule=Host(`example.com`)"
      - "traefik.http.routers.static-site.entrypoints=web"
      - "traefik.http.services.static-site.loadbalancer.server.port=80"

  ai-app:
    build: ./ai-app
    environment:
      - API_TOKEN=${API_TOKEN}
      - MONGO_URI=mongodb://db:27017
    volumes:
      - ./ai-app/data:/app/data
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - example-network
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ai-app.rule=Host(`ai.example.com`)"
      - "traefik.http.routers.ai-app.entrypoints=web"
      - "traefik.http.services.ai-app.loadbalancer.server.port=80"

  db:
    image: mongo:6.0
    volumes:
      - db_data:/data/db
    restart: unless-stopped
    networks:
      - example-network

networks:
  example-network:
    external: true

volumes:
  container_data:
  db_data:
